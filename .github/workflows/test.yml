name: Test
on:
  # Run CI on all pushes to the master and release/** branches, and on all new
  # pull requests, and on all pushes to pull requests (even if a pull request
  # is not against master).
  push:
    branches:
      - "master"
      - "release/**"
  pull_request:
  schedule:
    - cron: "0 0,12 * * *"
defaults:
  run:
    shell: bash
jobs:
  e2e-test:
    if: github.repository_owner == 'getsentry'
    runs-on: ubuntu-20.04
    name: "Sentry self-hosted end-to-end tests"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: self-hosted

      - name: Get Compose
        run: |
          # Always remove `docker compose` support as that's the newer version
          # and comes installed by default nowadays.
          sudo rm -f "/usr/local/lib/docker/cli-plugins/docker-compose"
          # Docker Compose v1 is installed here, remove it
          sudo rm -f "/usr/local/bin/docker-compose"
          sudo rm -f "/usr/local/lib/docker/cli-plugins/docker-compose"
          sudo mkdir -p "/usr/local/lib/docker/cli-plugins"
          sudo curl -L https://github.com/docker/compose/releases/download/v2.7.0/docker-compose-`uname -s`-`uname -m` -o "/usr/local/lib/docker/cli-plugins/docker-compose"
          sudo chmod +x "/usr/local/lib/docker/cli-plugins/docker-compose"

      - name: End to end tests
        uses: getsentry/action-self-hosted-e2e-tests@03010bd2963edc1f47b6e5e03167a4bc1433ea36
        with:
          project_name: self-hosted

  unit-test:
    if: github.repository_owner == 'getsentry'
    runs-on: ubuntu-20.04
    name: "unit tests"
    env:
      INTEGRATION_TEST: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unit Tests
        run: ./unit-test.sh

  integration-test:
    if: github.repository_owner == 'getsentry'
    runs-on: ubuntu-20.04
    name: "integration test"
    strategy:
      fail-fast: false
      matrix:
        test_type: ["initial-install", "customizations"]
        compose_version: ["v2.0.1", "v2.7.0"]
        include:
          - compose_version: "v2.0.1"
            compose_path: "/usr/local/lib/docker/cli-plugins"
          - compose_version: "v2.7.0"
            compose_path: "/usr/local/lib/docker/cli-plugins"
    env:
      COMPOSE_PROJECT_NAME: self-hosted-${{ strategy.job-index }}
      SENTRY_DSN: https://5a620019b5124cbba230a9e62db9b825@o1.ingest.us.sentry.io/6627632
      REPORT_SELF_HOSTED_ISSUES: 0
      INTEGRATION_TEST: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Compose
        run: |
          # Always remove `docker compose` support as that's the newer version
          # and comes installed by default nowadays.
          sudo rm -f "/usr/local/lib/docker/cli-plugins/docker-compose"
          # Docker Compose v1 is installed here, remove it
          sudo rm -f "/usr/local/bin/docker-compose"
          sudo rm -f "${{ matrix.compose_path }}/docker-compose"
          sudo mkdir -p "${{ matrix.compose_path }}"
          sudo curl -L https://github.com/docker/compose/releases/download/${{ matrix.compose_version }}/docker-compose-`uname -s`-`uname -m` -o "${{ matrix.compose_path }}/docker-compose"
          sudo chmod +x "${{ matrix.compose_path }}/docker-compose"

      - name: Install self-hosted
        run: ./install.sh

      - name: Integration Test
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: ./integration-test.sh --${{ matrix.test_type }}

      - name: Inspect failure
        if: failure()
        run: |
          num_envelopes=$(ls 2>/dev/null /tmp/sentry-envelope* | wc -l)
          # If we have one envelope, we know that test failure is consistent
          if [[ $num_envelopes == 1 ]]; then
            envelope_file=$(ls /tmp/sentry-envelope*)
            sed -i '' 's/"type":"Error"/"type":"Test Failure"/g' $envelope_file
            curl -sL https://sentry.io/get-cli/ | sh
            sentry-cli send-envelope $envelope_file
          fi
          docker compose ps
          docker compose logs

      - name: Flaky Test Detector
        if: success()
        run: |
          num_envelopes=$(ls 2>/dev/null /tmp/sentry-envelope* | wc -l)
          if [[ $num_envelopes -gt 0 ]]; then
            cd /tmp/
            for envelope_file in sentry-envelope*; do
              # Change event details in envelope once we detect flaky test
              sed -i '' 's/"level":"error"/"level":"warning"/g' $envelope_file
              sed -i '' 's/"type":"Error"/"type":"Flaky Test"/g' $envelope_file
              curl -sL https://sentry.io/get-cli/ | sh
              sentry-cli send-envelope $envelope_file
            done
          fi
